RUBY NOTES
* Classes are about objects ex. mybox = Box.new(x,y) > 
  - creates a new box object with the specified dimensions. which can now be
    acted upon by calling methods from the box class without having to put
    'Box.' before them as you would if you were using a module
  - The reason you have to put the module name in front is related to the
    point that you can't actually instatiate it, so it needs to be
    specifically called from it's related Model ex. ModBox.box_width(stuff)
* Modules are about functions (sharable with other classes)(Tools)


* CLASS

** Instatiation - Classes can be instatiated, while modules can not.
** instance variables
- These are created when a new class object is made
          # width = 10, height = 13
      ex. mybox = Box.new(10, 13)  
- 
************************************************************
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      @width, @height = w, h
   end

   # accessor methods
   def printWidth
      @width
   end

   def printHeight
      @height
   end
end

# create an object
box = Box.new(10, 20)

# use accessor methods
x = box.printWidth()
y = box.printHeight()

puts "Width of the box is : #{x}"
puts "Height of the box is : #{y}"
************************************************************
* MODULE
